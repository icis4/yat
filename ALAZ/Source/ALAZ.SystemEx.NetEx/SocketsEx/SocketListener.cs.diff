@@ -39,0 +40,9 @@
+#if (DEBUG)
+
+	// Enable debugging of exceptions:
+////#define DEBUG_EXCEPTIONS
+
+#endif
+
+using System.Diagnostics;
+
@@ -129 +138,8 @@ namespace ALAZ.SystemEx.NetEx.SocketsEx
-                FSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
+                // ----- \remind BEGIN -----
+                // 2020-05-18 / Matthias Klaey in Corona HomeOffice
+                // Support for IPv6.
+
+                FSocket = new Socket(LocalEndPoint.AddressFamily, SocketType.Stream, ProtocolType.Tcp);
+
+                // ----- \remind  END  -----
+
@@ -229 +245,5 @@ namespace ALAZ.SystemEx.NetEx.SocketsEx
-                if (!listener.Socket.AcceptAsync(e2))
+                // ----- \remind BEGIN -----
+                // 2010-05-14, 2020-09-03 / Matthias Klaey
+                // Handling exceptions.
+
+                try
@@ -231 +251,4 @@ namespace ALAZ.SystemEx.NetEx.SocketsEx
-                    BeginAcceptCallbackAsync(this, e2);
+                    if (!listener.Socket.AcceptAsync(e2))
+                    {
+                        BeginAcceptCallbackAsync(this, e2);
+                    }
@@ -232,0 +256,8 @@ namespace ALAZ.SystemEx.NetEx.SocketsEx
+                catch (ObjectDisposedException ex)
+                {
+                    DebugException(ex);
+                }
+                catch (NullReferenceException ex)
+                {
+                    DebugException(ex);
+                }
@@ -233,0 +265,2 @@ namespace ALAZ.SystemEx.NetEx.SocketsEx
+                // ----- \remind  END  -----
+
@@ -280,0 +314,15 @@ namespace ALAZ.SystemEx.NetEx.SocketsEx
+		#region Debug
+		//==========================================================================================
+		// Debug
+		//==========================================================================================
+
+		/// <remarks>
+		/// <c>private</c> because value of <see cref="ConditionalAttribute"/> is limited to file scope.
+		/// </remarks>
+		[Conditional("DEBUG_EXCEPTIONS")]
+		private void DebugException(Exception ex)
+		{
+			MKY.Diagnostics.DebugEx.WriteException(GetType(), ex, "This exception is intentionally output for debugging purposes. It indicates an issue in ALAZ.");
+		}
+
+		#endregion
