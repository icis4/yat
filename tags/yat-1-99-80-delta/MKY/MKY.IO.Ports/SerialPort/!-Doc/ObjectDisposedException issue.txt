
Described in several locations:
http://stackoverflow.com/questions/3808885/net-4-serial-port-objectdisposedexception-on-windows-7-only
http://stackoverflow.com/questions/3230311/problem-with-serialport
https://pastebin.com/KmKEVzR8

Details on this exception:
Type: System.ObjectDisposedException
Message: SafeHandle has been closed
Source: mscorlib
Stack:
   at System.StubHelpers.StubHelpers.SafeHandleC2NHelper(Object pThis, IntPtr pCleanupWorkList)
   at Microsoft.Win32.UnsafeNativeMethods.GetOverlappedResult(SafeFileHandle hFile, NativeOverlapped * lpOverlapped, Int32 & lpNumberOfBytesTransferred, Boolean bWait)
   at System.IO.Ports.SerialStream.EventLoopRunner.WaitForCommEvent()
   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.ThreadHelper.ThreadStart()

Findings by ToriLogic in July 2017:
"Unser Code Review des aktuellen .net 4.7 Codes auf github hat ergeben, dass die Implementierung des EventLoopRunners nach wie vor "kaputt" ist. Microsoft müsste das mal reparieren."

Information by Microsoft in August 2017:
"There is a fix in progress that is scheduled to be included in the next version of the .NET Framework that should resolve the issue where applications using the SerialPort fail due to an unhandled ObjectDisposedException exception that is thrown when the device is disconnected."
"There are no plans to address this issue in .NET 4.7 or earlier. The updated SerialPort code is scheduled to be included in .NET 4.7.1."
