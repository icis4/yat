
MKY.IO.Usb
==========

This USB library is based on three existing libraries available on the internet:
- 'GenericHid' from <http://www.lvr.com/hidpage.htm>
- 'UsbLibrary' from <http://www.codeproject.com/KB/cs/USB_HID.aspx?msg=2816038>
- 'UsbHid'     from <http://www.florian-leitner.de/index.php/category/usb-hid-library/>

The approach of merging these libraries into MKY.IO.Usb was choosen due to:
- None of the libraries provided all the features required for USB Ser/HID for YAT
- Need for a compact though complete library for USB Ser/HID for YAT

An alternative would have been to make use of a Win32 port of 'libusb'. Such approach is shown
in 'libusb.NET'/'libusb.NET.Test'. 'libusb.NET' uses the 'Winbows Backend' port of 'libusb'.
'libusb.NET' is based on 'SharpUSBLib' by Mike Krüger.

However, experience has shown that a 'libusb' based approach isn't feasible:
- The API of 'libusb' isn't a good match for a C#.NET based project
- 'libusb' doesn't easily fit into a managed .NET solution
- 'libusb' is implemented platform dependent and must be separately built for Win32/x86 and Win64/x64
- 'libusb' only provides the basic USB functions but no HID specifics
- 'libusb windows_backend' doesn't yet support detection of hot plug-in/out
- 'libusb-win32' seems to have serious portability issues on Vista, Win7, x64
- 'libusb-win32' is based on libusb-0.1.12 but libusb-1.0 has been available since 2008-12

In the end, it proved much more promising to go for a new MKY.IO.Usb.


hid.dll vs winusb.dll
---------------------

Windows provides different dll's that deal with USB:
- hid.dll    => Rather old infrastructure that provides basic USB functionality
- winusb.dll => New infrastructure, available in Vista and above

At first, WinUSB looks more promising than HID. Especially because HID only provides limited functions
to control the low-level operations such as SetDescriptor() or GetDescriptor(). However, the WinUSB API
is only useful with devices that provide a WinUSB based driver. See
http://download.microsoft.com/download/9/C/5/9C5B2167-8017-4BAE-9FDE-D599BAC8184A/WinUsb_HowTo.docx
for details.

Currently, MKY.IO.Usb only supports true HID devices, i.e. devices that are handled by HID.


Architecture
------------

For MKY.IO.Usb, the following main parts are involved:
- MKY.Utilities.Usb   => Basic USB specific utilities
- MKY.Utilities.Win32 => Wrappers for Win32 API functions and types (system32/kernel32/user32/setupapi/hid.dll)
- MKY.IO.Usb          => The USB library itself
- MKY.IO.Serial       => Wrappers that implement the generic interface IIOProvider for various kinds of serial communications

In addition, there are the following supporting projects:
- MKY.Utilities.Test  => NUnit based test environment for MKY.Utilities
- MKY.IO.Usb.Demo     => Demo client showing the use of MKY.IO.Usb
- MKY.IO.Usb.Test     => NUnit based test environment for MKY.IO.Usb
- MKY.IO.Serial.Test  => NUnit based test environment for MKY.IO.Serial


MKY.IO.Usb
----------

MKY.IO.Usb consists of the following main parts:
- DeviceCollection    => Collection that enummerates USB devices
- Device              => Encapsulates basic USB functionality such as VID/PID/Manufacturer/Product/SerialNumber/Connect/Disconnect
- HidDevice           => Inherits from Device and adds HID specific functionality such as Read/Write from/to a serial stream


-----------------------
2010-Q1 / Matthias Kläy
