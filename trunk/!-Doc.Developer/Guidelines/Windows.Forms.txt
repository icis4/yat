
Allow proper system scaling for values other than 100%
------------------------------------------------------

For forms and user controls:
 > Avoid setting 'MaximumSize'
   ('MinimumSize' won't cause problems, but may not be as restrictive as expected, but 'MaximumSize' may limit 'Size's scaling, which can cause problems.)

For forms:
 > Use the 'MKY.Windows.Forms.SplitContainerScaler' to let all contained split containers be scaled.

For user controls:
 > Set 'AutoScaleMode' to 'Inherit' (default is 'Font')
 > Do not anchor 'Right' or 'Bottom' to a user control, instead use a panel with 'Dock' = 'Fill'

Based on:
 > "Resolution" @ https://support.microsoft.com/en-us/help/967578/child-controls-on-a-usercontrol-may-get-clipped-in-a-system-with-a-low
 > "Design Guidelines" @ https://stackoverflow.com/questions/22735174/how-to-write-winforms-code-that-auto-scales-to-system-font-and-dpi-settings


StatusStrip
-----------
'StatusStrip' items do not show tool tip by default, 'ShowItemToolTips' must be manually set to 'True'.


Initial drawing
---------------

Use the 'Shown' event to initially set controls of a form:

		/// <summary>
		/// Initially set controls and validate its contents where needed.
		/// </summary>
		/// <remarks>
		/// The 'Shown' event is only raised the first time a form is displayed; subsequently
		/// minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will
		/// not raise this event again.
		/// Note that the 'Shown' event is raised after the 'Load' event and will also be raised if
		/// the application is started minimized. Also note that operations called in the 'Shown'
		/// event can depend on a properly drawn form, as the 'Paint' event of this form and its
		/// child controls has been raised before this 'Shown' event.
		/// </remarks>
		private void <Form>_Shown(object sender, EventArgs e)
		{

Use the 'StartUp-And-Properly-Show-UserControl-Controls' pattern to initially set controls of a user control:

		/// <summary>
		/// Startup flag only used in the following event handler.
		/// </summary>
		private bool isStartingUp = true;

		/// <summary>
		/// Initially set controls and validate its contents where needed.
		/// </summary>
		/// <remarks>
		/// Use paint event to ensure that message boxes in case of errors (e.g. validation errors)
		/// are shown on top of a properly painted control or form.
		/// </remarks>
		private void <UserControl>_Paint(object sender, PaintEventArgs e)
		{
			if (this.isStartingUp)
			{
				this.isStartingUp = false;

For more details on events of Windows.Forms, see the MKY > SequenceOfFormAndControlEvents demo project.
